name: build

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-gnu
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
    - uses: actions/checkout@v2
    - name: install toolchain
      run: |
        case "${{ matrix.target }}" in
          x86_64-pc-windows-gnu )
            sudo apt install g++-mingw-w64
            cat << EOF > ~/.cargo/config
        [target.${{ matrix.target }}]
        linker = "x86_64-w64-mingw32-gcc"
        ar = "x86_64-w64-mingw32-ar"
        EOF
            ;;
          x86_64-unknown-linux-musl )
            sudo apt install musl-tools
            ;;
        esac
      if: ${{ matrix.os == 'ubuntu-20.04' }}
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          profile: minimal
    - name: build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.target }}

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.target }}
        path: ${{ github.workspace }}/target/*/release/pwl*

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    #if: contains(github.ref, 'tags/v')
    steps:
      - uses: actions/download-artifact@v2
      - run: echo ${{ github.ref }}
      - run: find . -type f

      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.0.0-test1
          release_name: Release ${{ github.ref }}
          draft: true
          #prerelease: false

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./x86_64-pc-windows-gnu/x86_64-pc-windows-gnu/release/pwl.exe
          asset_name: x86_64-pc-windows-gnu-pwl.exe
          asset_content_type: application/octet-stream

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./x86_64-pc-windows-msvc/x86_64-pc-windows-msvc/release/pwl.exe
          asset_name: x86_64-pc-windows-msvc-pwl.exe
          asset_content_type: application/octet-stream

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./x86_64-unknown-linux-musl/x86_64-unknown-linux-musl/release
          asset_name: x86_64-unknown-linux-musl-pwl
          asset_content_type: application/octet-stream

# vim: set ts=2 sts=2 sw=2:
